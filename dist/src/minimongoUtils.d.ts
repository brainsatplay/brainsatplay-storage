export let db: any;
export function localDB(db: any): any;
export function remoteDB(db: any, url: any, client: any, httpclient: any, useQuickFind: any, usePostFind: any): any;
export function connectDB(db: any, url: any, client: any, httpclient: any, useQuickFind: any, usePostFind: any): any;
export function readData(db: any, collection?: string, query?: {}): Promise<any>;
export function writeData(db: any, collection: any, data?: {}, onsuccess?: (doc: any) => void, onerror?: (err: any) => void): Promise<any>;
export function readFile(db: any, collection: any, filename?: string): Promise<any[] | undefined>;
export function readFileChunk(db: any, collection: any, filename: string | undefined, chunk: undefined, start: undefined, end: undefined, onsuccess: ((doc: any) => void) | undefined, onerror: ((err: any) => void) | undefined, findOneOptions: any): Promise<any>;
export function writeFile(db: any, collection: any, filename: string | undefined, data: any, onsuccess?: (doc: any) => void, onerror?: (err: any) => void, props?: {}, filetype?: string, chunkSize?: number): Promise<void>;
export function appendFile(db: any, collection: any, filename: string | undefined, data: any, onsuccess?: (doc: any) => void, onerror?: (err: any) => void, props?: {}, filetype?: string, chunkSize?: number): Promise<void>;
export function getFilenames(db: any, collection: any): Promise<any[]>;
export function listFiles(db: any, collection: any): Promise<any[]>;
export function getFileSize(db: any, collection: any, filename: any): Promise<number>;
export function deleteFile(db: any, collection: any, query: any): Promise<any>;
export function writeToCSVFromDB(db: any, collection: any, filename: any): Promise<void>;
export function getCSVHeader(db: any, collection: any, filename: any): Promise<undefined>;
export function readFileAsText(db: any, collection: any, filename: any): Promise<undefined>;
